version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    container_name: whatsapp-api-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: whatsapp_api
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - whatsapp-api-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile.backend
    container_name: whatsapp-api-backend
    restart: always
    depends_on:
      - mongodb
    environment:
      PORT: 3000
      MONGODB_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/whatsapp_api?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: production
      SESSION_PATH: /app/sessions
    volumes:
      - whatsapp_sessions:/app/sessions
    ports:
      - "3000:3000"
    networks:
      - whatsapp-api-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  frontend:
    build:
      context: .
      dockerfile: ./Dockerfile.frontend
    container_name: whatsapp-api-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - whatsapp-api-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  whatsapp-api-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  whatsapp_sessions:
    driver: local